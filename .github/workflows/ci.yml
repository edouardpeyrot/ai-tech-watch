name: Build Executable

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install jinja2 python-dotenv

    - name: Build executable with PyInstaller (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        pyinstaller --onefile \
          --name ai-tech-watch \
          --add-data "email.j2:." \
          --add-data "error.j2:." \
          --add-data "config.yaml:." \
          --hidden-import=pyyaml \
          --hidden-import=dotenv\
          --hidden-import=jinja2 \
          main.py

    - name: Build executable with PyInstaller (Windows)
      if: runner.os == 'Windows'
      run: |
        pyinstaller --onefile `
          --name ai-tech-watch `
          --add-data "email.j2;." `
          --add-data "error.j2;." `
          --add-data "config.yaml;." `
          --hidden-import=pyyaml `
          --hidden-import=dotenv`
          --hidden-import=jinja2 `
          main.py

    - name: Rename executable (Linux/macOS)
      if: runner.os != 'Windows'
      run: |
        cd dist
        if [ "${{ runner.os }}" = "Linux" ]; then
          mv ai-tech-watch ai-tech-watch-linux-amd64
        elif [ "${{ runner.os }}" = "macOS" ]; then
          mv ai-tech-watch ai-tech-watch-macos-amd64
        fi

    - name: Rename executable (Windows)
      if: runner.os == 'Windows'
      run: |
        cd dist
        Rename-Item ai-tech-watch.exe ai-tech-watch-windows-amd64.exe

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ai-tech-watch-${{ runner.os }}-${{ matrix.python-version }}
        path: dist/*
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Display structure of downloaded files
      run: ls -R artifacts

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

